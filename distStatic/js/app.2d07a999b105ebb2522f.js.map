{"version":3,"sources":["webpack:///./src/js/sd.js","webpack:///./src/js/sd-main.js","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/js/SkeletonBinary.js","webpack:///src/components/MySpineController.vue","webpack:///src/components/MySpine.vue","webpack:///./src/router/index.js","webpack:///./src/components/MySpineController.vue?c7aa","webpack:///./src/components/MySpine.vue?4c6d","webpack:///./src/components/MySpineController.vue","webpack:///./src/components/MySpine.vue","webpack:///src/App.vue","webpack:///./src/App.vue?37fc"],"names":["_SkeletonBinary","__webpack_require__","PIXI","SD","basePath","this","loader","loaders","Loader","prototype","spineData","load","name","v","_this","changeCanvas","skelpath","atlaspath","texpath","add","type","xhrType","resources","skelBin","SkeletonBinary","data","Uint8Array","initJson","rawSkeletonData","json","rawAtlasData","spineAtlas","spine","core","TextureAtlas","line","callback","BaseTexture","from","spineAtlasLoader","AtlasAttachmentLoader","skeletonData","SkeletonJson","readSkeletonData","_sd","_jquery","viewer","init","sd","canvas","_jquery2","default","selectAnimation","change","changeAnimation","selectedIndex","app","Application","transparent","html","view","stage","removeChildren","Spine","animations","stringAnimations","i","length","state","setAnimation","addChild","position","set","width","height","centerSD","num","onResize","document","getElementById","getBoundingClientRect","style","renderer","resize","removeSd","loadSd","sdWidth","exports","Object","defineProperty","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_App_vue___default","n","__WEBPACK_IMPORT_KEY__","key","d","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_a6b31522_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_App_vue__","__vue_styles__","ssrContext","Component","normalizeComponent","a","Vue","config","productionTip","el","router","components","App","template","scale","nextNum","chars","readByte","readBoolean","readShort","readInt","optimizePositive","b","result","bytes2Float32","bytes","sign","exponent","significand","Number","NaN","POSITIVE_INFINITY","Math","pow","readFloat","readVertices","vertexCount","verticesLength","readFloatArray","vertices","Array","boneCount","push","j","array","readShortArray","readIntArray","readHex","hex","toString","readColor","readString","charCount","String","fromCharCode","skeleton","hash","nonessential","fps","images","bones","boneData","parent","parentIndex","rotation","x","y","scaleX","scaleY","shearX","shearY","transform","TransformMode","color","slots","slotData","bone","dark","attachment","blend","BlendMode","ik","ikConstraints","order","target","mix","bendPositive","transformConst","ii","nn","local","relative","rotateMix","translateMix","scaleMix","shearMix","path","pathConst","positionMode","PositionMode","spacingMode","SpacingMode","rotateMode","RotateMode","spacing","skins","skinsName","defaultSkin","readSkin","skinName","skin","events","eventsName","eventName","event","int","float","string","animationName","animation","readAnimation","slotCount","slotIndex","slot","readAttachment","attachmentName","AttachmentType","region","box","mesh","uvs","triangles","hull","edges","linkedmesh","deform","closed","constantSpeed","lengths","point","clipping","end","readCurve","frameIndex","timeline","curve","cx1","cy1","cx2","cy2","duration","slotMap","timeCount","timelineType","frameCount","time","max","light","twoColor","boneIndex","boneMap","angle","rotate","timelineScale","tltime","tlx","tly","translate","shear","ikIndex","transformIndex","paths","pathIndex","pathMap","f","skinIndex","slotAtt","iii","nnn","meshName","start","offset","drawOrderCount","drawOrders","drawOrderMap","offsetCount","offsets","offsetMap","dooffset","drawOrder","eventCount","eventData","e","MySpine","_MySpine2","selectedModel","modelNames","created","_axios2","get","then","response","console","log","props","selectedAnimation","watch","newName","oldName","skelName","window","mounted","$refs","id","appendChild","methods","use","Router","routes","esExports","render","_vm","_h","$createElement","_c","_self","_v","directives","rawName","expression","attrs","on","$event","$$selectedVal","filter","call","options","o","selected","map","_value","multiple","_l","domProps","_s","staticRenderFns","ref","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpineController_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpineController_vue___default","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_325f4ebd_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_MySpineController_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpine_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpine_vue___default","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_5493c951_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_MySpine_vue__","_MySpineController","MySpineController","_MySpineController2"],"mappings":"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","file":"distStatic/js/app.2d07a999b105ebb2522f.js","sourcesContent":["import {SkeletonBinary} from './SkeletonBinary.js';\nimport * as PIXI from 'pixi.js';\nimport \"pixi-spine\";\n\nfunction SD(basePath) {\n    this.basePath = basePath;\n    this.loader = new PIXI.loaders.Loader(this.basePath);\n}\nSD.prototype = {\n    spineData: {},\n    load: function(name, v) {\n        if (!this.spineData[name]) {\n            var skelpath = name + '.skel';\n            var atlaspath = name + '.atlas';\n            var texpath = name + '.png';\n            this.loader.add(name + '_atlas', atlaspath, {\n                type: 'atlas',\n            });\n            this.loader.add(name + '_skel', skelpath, {\n                xhrType: 'arraybuffer',\n            });\n            this.loader.add(name + '_tex', texpath);\n\n\n            this.loader.load((loader, resources) => {\n                var skelBin = new SkeletonBinary();\n                skelBin.data = new Uint8Array(resources[name + '_skel'].data);\n\n\n                skelBin.initJson();\n                var rawSkeletonData = skelBin.json;\n\n                var rawAtlasData = resources[name + '_atlas'].data;\n                var spineAtlas = new PIXI.spine.core.TextureAtlas(rawAtlasData, function(line, callback) {\n                    callback(PIXI.BaseTexture.from(name + '_tex'));\n                });\n                var spineAtlasLoader = new PIXI.spine.core.AtlasAttachmentLoader(spineAtlas);\n                var spineJsonParser = new PIXI.spine.core.SkeletonJson(spineAtlasLoader);\n                var skeletonData = spineJsonParser.readSkeletonData(rawSkeletonData);\n                this.spineData[name] = skeletonData;\n                v.changeCanvas(skeletonData);\n            });\n        } else {\n            v.changeCanvas(this.spineData[name]);\n        }\n    },\n};\n\nexport {SD};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/sd.js","import {SD} from \"./sd.js\"\nimport * as PIXI from 'pixi.js';\nimport \"pixi-spine\";\n\nimport $ from \"jquery\";\n\nvar viewer = {\n    init: function(basePath) {\n        viewer.sd = new SD(basePath);\n        viewer.canvas = $(\".Canvas\");\n        viewer.selectAnimation = $(\".selectAnimation\");\n        viewer.selectAnimation.change(function() {\n            viewer.changeAnimation(this.selectedIndex);\n        });\n        viewer.app = new PIXI.Application(512,512,{\n            transparent: true\n        });\n        viewer.canvas.html(viewer.app.view);\n    },\n    changeCanvas: function(skeletonData) {\n        viewer.app.stage.removeChildren();\n        viewer.spine = new PIXI.spine.Spine(skeletonData);\n        var animations = viewer.spine.spineData.animations;\n        var stringAnimations = \"\";\n        for (var i = 0; i < animations.length; i++) {\n            if (animations[i].name == \"stand\")\n                stringAnimations += \"<option value=\\\"\" + animations[i].name + \"\\\" selected>\" + animations[i].name + \"</option>\";\n            else\n                stringAnimations += \"<option value=\\\"\" + animations[i].name + \"\\\">\" + animations[i].name + \"</option>\";\n        }\n        viewer.selectAnimation.html(stringAnimations);\n        viewer.spine.state.setAnimation(0, \"stand\", true);\n        viewer.app.stage.addChild(viewer.spine);\n        viewer.spine.position.set(viewer.app.view.width * 0.5, viewer.app.view.height * 0.8);\n        centerSD();\n    },\n    changeAnimation: function(num) {\n        var name = viewer.spine.spineData.animations[num].name;\n        viewer.spine.state.setAnimation(0, name, true);\n    },\n    onResize: function() {\n        var element = document.getElementById(\"containerSD\");\n        var positionInfo = element.getBoundingClientRect();\n        var width = positionInfo.width;\n        if (width > 512) {\n            width = 512;\n        }\n        var height = width;\n        viewer.app.view.style.width = width + \"px\";\n        viewer.app.view.style.height = height + \"px\";\n        viewer.app.renderer.resize(width, height);\n        viewer.spine.position.set(width * 0.5, height * 0.8);\n    },\n    removeSd: function() {\n        viewer.app.stage.removeChildren();\n    },\n    loadSd: function(sd) {\n        viewer.sd.load(sd, viewer);\n    },\n    sdWidth: function() {\n        return viewer.app.view.width;\n    }\n};\n\nexports.viewer = viewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/sd-main.js","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a6b31522\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a6b31522\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = M93x\n// module chunks = 1","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","function SkeletonBinary() {}\n\nSkeletonBinary.prototype = {\n    data: null,\n    scale: 1,\n    json: {},\n    nextNum: 0,\n    chars: null,\n    readByte: function() {\n        return this.nextNum < this.data.length ? this.data[this.nextNum++] : null;\n    },\n    readBoolean: function() {\n        return this.readByte() != 0;\n    },\n    readShort: function() {\n        return (this.readByte() << 8) | this.readByte();\n    },\n    readInt: function(optimizePositive) {\n        if (typeof optimizePositive === 'undefined') {\n            return (this.readByte() << 24) | (this.readByte() << 16) | (this.readByte() << 8) | this.readByte();\n        }\n        var b = this.readByte();\n        var result = b & 0x7f;\n        if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7f) << 7;\n            if ((b & 0x80) != 0) {\n                b = this.readByte();\n                result |= (b & 0x7f) << 14;\n                if ((b & 0x80) != 0) {\n                    b = this.readByte();\n                    result |= (b & 0x7f) << 21;\n                    if ((b & 0x80) != 0) {\n                        b = this.readByte();\n                        result |= (b & 0x7f) << 28;\n                    }\n                }\n            }\n        }\n        return optimizePositive ? result : (result >> 1) ^ -(result & 1);\n    },\n    bytes2Float32: function(bytes) {\n        var sign = bytes & 0x80000000 ? -1 : 1;\n        var exponent = ((bytes >> 23) & 0xff) - 127;\n        var significand = bytes & ~(-1 << 23);\n        if (exponent == 128) return sign * (significand ? Number.NaN : Number.POSITIVE_INFINITY);\n        if (exponent == -127) {\n            if (significand == 0) return sign * 0.0;\n            exponent = -126;\n            significand /= 1 << 22;\n        } else significand = (significand | (1 << 23)) / (1 << 23);\n        return sign * significand * Math.pow(2, exponent);\n    },\n    readFloat: function() {\n        return this.bytes2Float32((this.readByte() << 24) + (this.readByte() << 16) + (this.readByte() << 8) + (this.readByte() << 0));\n    },\n    readVertices: function(vertexCount) {\n        var verticesLength = vertexCount << 1;\n        if (!this.readBoolean()) {\n            return this.readFloatArray(verticesLength, this.scale);\n        }\n        var vertices = new Array();\n        for (var i = 0; i < vertexCount; i++) {\n            var boneCount = this.readInt(true);\n            vertices.push(boneCount);\n            for (var j = 0; j < boneCount; j++) {\n                vertices.push(this.readInt(true));\n                vertices.push(this.readFloat() * this.scale);\n                vertices.push(this.readFloat() * this.scale);\n                vertices.push(this.readFloat());\n            }\n        }\n        return vertices;\n    },\n    readFloatArray: function(n, scale) {\n        var array = new Array(n);\n        if (scale == 1) {\n            for (var i = 0; i < n; i++) {\n                array[i] = this.readFloat();\n            }\n        } else {\n            for (var i = 0; i < n; i++) {\n                array[i] = this.readFloat() * scale;\n            }\n        }\n        return array;\n    },\n    readShortArray: function() {\n        var n = this.readInt(true);\n        var array = new Array(n);\n        for (var i = 0; i < n; i++) {\n            array[i] = this.readShort();\n        }\n        return array;\n    },\n    readIntArray: function() {\n        var n = this.readInt(true);\n        var array = new Array(n);\n        for (var i = 0; i < n; i++) array[i] = this.readInt(true);\n        return array;\n    },\n    readHex: function() {\n        var hex = this.readByte().toString(16);\n        return hex.length == 2 ? hex : '0' + hex;\n    },\n    readColor: function() {\n        return this.readHex() + this.readHex() + this.readHex() + this.readHex();\n    },\n    readString() {\n        var charCount = this.readInt(this, true);\n        switch (charCount) {\n            case 0:\n                return null;\n            case 1:\n                return '';\n        }\n        charCount--;\n        this.chars = '';\n        var b = 0;\n        for (var i = 0; i < charCount; ) {\n            b = this.readByte();\n            switch (b >> 4) {\n                case 12:\n                case 13:\n                    this.chars += String.fromCharCode(((b & 0x1f) << 6) | (this.readByte() & 0x3f));\n                    i += 2;\n                    break;\n                case 14:\n                    this.chars += String.fromCharCode(((b & 0x0f) << 12) | ((this.readByte() & 0x3f) << 6) | (this.readByte() & 0x3f));\n                    i += 3;\n                    break;\n                default:\n                    this.chars += String.fromCharCode(b);\n                    i++;\n            }\n        }\n        return this.chars;\n    },\n    initJson: function() {\n        this.json.skeleton = {};\n        var skeleton = this.json.skeleton;\n        skeleton.hash = this.readString();\n        if (skeleton.hash.length == 0) skeleton.hash = null;\n        skeleton.spine = this.readString();\n        if (skeleton.spine.length == 0) skeleton.spine = null;\n        skeleton.width = this.readFloat();\n        skeleton.height = this.readFloat();\n        var nonessential = this.readBoolean();\n        if (nonessential) {\n            skeleton.fps = this.readFloat();\n            skeleton.images = this.readString();\n            if (skeleton.images.length == 0) skeleton.images = null;\n        }\n        this.json.bones = new Array(this.readInt(true));\n        var bones = this.json.bones;\n        for (var i = 0; i < bones.length; i++) {\n            var boneData = {};\n            boneData.name = this.readString();\n            boneData.parent = null;\n            if (i != 0) {\n                var parentIndex = this.readInt(true);\n                boneData.parent = bones[parentIndex].name;\n            }\n            boneData.rotation = this.readFloat();\n            boneData.x = this.readFloat() * this.scale;\n            boneData.y = this.readFloat() * this.scale;\n            boneData.scaleX = this.readFloat();\n            boneData.scaleY = this.readFloat();\n            boneData.shearX = this.readFloat();\n            boneData.shearY = this.readFloat();\n            boneData.length = this.readFloat() * this.scale;\n            boneData.transform = TransformMode[this.readInt(true)];\n            if (nonessential) {\n                boneData.color = this.readColor();\n            }\n            bones[i] = boneData;\n        }\n        this.json.slots = new Array(this.readInt(true));\n        var slots = this.json.slots;\n        for (var i = 0; i < slots.length; i++) {\n            var slotData = {};\n            slotData.name = this.readString();\n            var boneData = this.json.bones[this.readInt(true)];\n            slotData.bone = boneData.name;\n            slotData.color = this.readColor();\n            slotData.dark = this.readColor();\n            slotData.attachment = this.readString();\n            slotData.blend = BlendMode[this.readInt(true)];\n            slots[i] = slotData;\n        }\n        var ik = new Array(this.readInt(true));\n        for (var i = 0; i < ik.length; i++) {\n            var ikConstraints = {};\n            ikConstraints.name = this.readString();\n            ikConstraints.order = this.readInt(true);\n            ikConstraints.bones = new Array(this.readInt(true));\n            for (var j = 0; j < ikConstraints.bones.length; j++) {\n                ikConstraints.bones[j] = this.json.bones[this.readInt(true)].name;\n            }\n            ikConstraints.target = this.json.bones[this.readInt(true)].name;\n            ikConstraints.mix = this.readFloat();\n            ikConstraints.bendPositive = this.readByte() != 255;\n            ik[i] = ikConstraints;\n        }\n        this.json.ik = ik;\n        var transform = new Array(this.readInt(true));\n        for (var i = 0; i < transform.length; i++) {\n            var transformConst = {};\n            transformConst.name = this.readString();\n            transformConst.order = this.readInt(true);\n            var bones = new Array(this.readInt(true));\n            for (var ii = 0, nn = bones.length; ii < nn; ii++) {\n                bones[ii] = this.json.bones[this.readInt(true)].name;\n            }\n            transformConst.bones = bones;\n            transformConst.target = this.json.bones[this.readInt(true)].name;\n            transformConst.local = this.readBoolean();\n            transformConst.relative = this.readBoolean();\n            transformConst.rotation = this.readFloat();\n            transformConst.x = this.readFloat() * this.scale;\n            transformConst.y = this.readFloat() * this.scale;\n            transformConst.scaleX = this.readFloat();\n            transformConst.scaleY = this.readFloat();\n            transformConst.shearY = this.readFloat();\n            transformConst.rotateMix = this.readFloat();\n            transformConst.translateMix = this.readFloat();\n            transformConst.scaleMix = this.readFloat();\n            transformConst.shearMix = this.readFloat();\n            transform[i] = transformConst;\n        }\n        this.json.transform = transform;\n        var path = new Array(this.readInt(true));\n        for (var i = 0; i < path.length; i++) {\n            var pathConst = {};\n            pathConst.name = this.readString();\n            pathConst.order = this.readInt(true);\n            pathConst.bones = new Array(this.readInt(true));\n            for (var ii = 0, nn = pathConst.bones.length; ii < nn; ii++) {\n                pathConst.bones[ii] = this.json.bones[this.readInt(true)].name;\n            }\n            pathConst.target = this.json.slots[this.readInt(true)].name;\n            pathConst.positionMode = PositionMode[this.readInt(true)];\n            pathConst.spacingMode = SpacingMode[this.readInt(true)];\n            pathConst.rotateMode = RotateMode[this.readInt(true)];\n            pathConst.rotation = this.readFloat();\n            pathConst.position = this.readFloat();\n            pathConst.spacing = this.readFloat();\n            pathConst.rotateMix = this.readFloat();\n            pathConst.translateMix = this.readFloat();\n            path[i] = pathConst;\n        }\n        this.json.path = path;\n        this.json.skins = {};\n        this.json.skinsName = new Array();\n        var skins = this.json.skins;\n        var defaultSkin = this.readSkin('default', nonessential);\n        if (defaultSkin != null) {\n            skins['default'] = defaultSkin;\n            this.json.skinsName.push('default');\n        }\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var skinName = this.readString();\n            var skin = this.readSkin(skinName, nonessential);\n            skins[skinName] = skin;\n            this.json.skinsName.push('skinName');\n        }\n        this.json.events = [];\n        this.json.eventsName = [];\n        var events = this.json.events;\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var eventName = this.readString();\n            var event = {};\n            event.int = this.readInt(false);\n            event.float = this.readFloat();\n            event.string = this.readString();\n            events[eventName] = event;\n            this.json.eventsName[i] = eventName;\n        }\n        this.json.animations = {};\n        var animations = this.json.animations;\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var animationName = this.readString();\n            var animation = this.readAnimation(animationName);\n            animations[animationName] = animation;\n        }\n    },\n    readSkin(skinName, nonessential) {\n        var slotCount = this.readInt(true);\n        if (slotCount == 0) return null;\n        var skin = {};\n        for (var i = 0; i < slotCount; i++) {\n            var slotIndex = this.readInt(true);\n            var slot = {};\n            for (var j = 0, n = this.readInt(true); j < n; j++) {\n                var name = this.readString();\n                var attachment = this.readAttachment(name, nonessential);\n                slot[name] = attachment;\n            }\n            skin[this.json.slots[slotIndex].name] = slot;\n        }\n        return skin;\n    },\n    readAttachment(attachmentName, nonessential) {\n        var name = this.readString();\n        if (name == null) name = attachmentName;\n        switch (AttachmentType[this.readByte()]) {\n            case 'region':\n                var path = this.readString();\n                if (path == null) path = name;\n                var region = {};\n                region.type = 'region';\n                region.name = name;\n                region.path = path;\n                region.rotation = this.readFloat();\n                region.x = this.readFloat() * this.scale;\n                region.y = this.readFloat() * this.scale;\n                region.scaleX = this.readFloat();\n                region.scaleY = this.readFloat();\n                region.width = this.readFloat() * this.scale;\n                region.height = this.readFloat() * this.scale;\n                region.color = this.readColor();\n                return region;\n            case 'boundingbox':\n                var box = {};\n                box.type = 'boundingbox';\n                box.name = name;\n                var vertexCount = this.readInt(true);\n                box.vertexCount = vertexCount;\n                box.vertices = this.readVertices(vertexCount);\n                if (this.nonessential) {\n                    box.color = this.readColor();\n                }\n                return box;\n            case 'mesh':\n                var path = this.readString();\n                if (path == null) path = name;\n                var mesh = {};\n                mesh.type = 'mesh';\n                mesh.name = name;\n                mesh.path = path;\n                mesh.color = this.readColor();\n                var vertexCount = this.readInt(true);\n                mesh.uvs = this.readFloatArray(vertexCount << 1, 1);\n                mesh.triangles = this.readShortArray();\n                mesh.vertices = this.readVertices(vertexCount);\n                mesh.hull = this.readInt(true) << 1;\n                if (nonessential) {\n                    mesh.edges = this.readShortArray();\n                    mesh.width = this.readFloat() * this.scale;\n                    mesh.height = this.readFloat() * this.scale;\n                }\n                return mesh;\n            case 'linkedmesh':\n                var path = this.readString();\n                if (path == null) path = name;\n                var linkedmesh = {};\n                linkedmesh.type = 'linkedmesh';\n                linkedmesh.name = name;\n                linkedmesh.path = path;\n                linkedmesh.color = this.readColor();\n                linkedmesh.skin = this.readString();\n                linkedmesh.parent = this.readString();\n                linkedmesh.deform = this.readBoolean();\n                if (nonessential) {\n                    linkedmesh.width = this.readFloat() * this.scale;\n                    linkedmesh.height = this.readFloat() * this.scale;\n                }\n                return linkedmesh;\n            case 'path':\n                var path = {};\n                path.type = 'path';\n                path.name = name;\n                path.closed = this.readBoolean();\n                path.constantSpeed = this.readBoolean();\n                var vertexCount = this.readInt(true);\n                path.vertexCount = vertexCount;\n                path.vertices = this.readVertices(vertexCount);\n                var lengths = new Array(vertexCount / 3);\n                for (var i = 0; i < lengths.length; i++) {\n                    lengths[i] = this.readFloat() * this.scale;\n                }\n                path.lengths = lengths;\n                if (nonessential) {\n                    path.color = this.readColor();\n                }\n                return path;\n            case 'point':\n                var point = {};\n                point.type = 'point';\n                point.name = name;\n                point.rotation = this.readFloat();\n                point.x = this.readFloat() * this.scale;\n                point.y = this.readFloat() * this.scale;\n                if (nonessential) {\n                    path.color = this.readColor();\n                }\n                return point;\n            case 'clipping':\n                var clipping = {};\n                clipping.type = 'clipping';\n                clipping.name = name;\n                clipping.end = this.readInt(true);\n                var vertexCount = this.readInt(true);\n                clipping.vertexCount = vertexCount;\n                clipping.vertices = this.readVertices(vertexCount);\n                if (nonessential) {\n                    clipping.color = this.readColor();\n                }\n                return clipping;\n        }\n        return null;\n    },\n    readCurve(frameIndex, timeline) {\n        switch (this.readByte()) {\n            case 0:\n                timeline[frameIndex].curve = 'linear';\n                break;\n            case 1:\n                timeline[frameIndex].curve = 'stepped';\n                break;\n            case 2:\n                var cx1 = this.readFloat();\n                var cy1 = this.readFloat();\n                var cx2 = this.readFloat();\n                var cy2 = this.readFloat();\n                timeline[frameIndex].curve = [cx1, cy1, cx2, cy2];\n        }\n    },\n    readAnimation(name) {\n        var animation = {};\n        var scale = this.scale;\n        var duration = 0;\n        var slots = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var slotIndex = this.readInt(true);\n            var slotMap = {};\n            var timeCount = this.readInt(true);\n            for (var ii = 0; ii < timeCount; ii++) {\n                var timelineType = this.readByte();\n                var frameCount = this.readInt(true);\n                switch (timelineType) {\n                    case 0:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var attachmentName = this.readString();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].name = attachmentName;\n                        }\n                        slotMap.attachment = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                    case 1:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var color = this.readColor();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].color = color;\n                            if (frameIndex < frameCount - 1) {\n                                var str = this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        slotMap.color = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                    case 2:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var light = this.readColor();\n                            var dark = this.readColor();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].light = light;\n                            timeline[frameIndex].dark = dark;\n                            if (frameIndex < frameCount - 1) {\n                                var str = this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        slotMap.twoColor = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                }\n            }\n            slots[this.json.slots[slotIndex].name] = slotMap;\n        }\n        animation.slots = slots;\n        var bones = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var boneIndex = this.readInt(true);\n            var boneMap = {};\n            for (var ii = 0, nn = this.readInt(true); ii < nn; ii++) {\n                var timelineType = this.readByte();\n                var frameCount = this.readInt(true);\n                switch (timelineType) {\n                    case 0:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var angle = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].angle = angle;\n                            if (frameIndex < frameCount - 1) {\n                                this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        boneMap.rotate = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                    case 1:\n                    case 2:\n                    case 3:\n                        var timeline = new Array(frameCount);\n                        var timelineScale = 1;\n                        if (timelineType == 1) {\n                            timelineScale = scale;\n                        }\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var tltime = this.readFloat();\n                            var tlx = this.readFloat();\n                            var tly = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = tltime;\n                            timeline[frameIndex].x = tlx * timelineScale;\n                            timeline[frameIndex].y = tly * timelineScale;\n                            if (frameIndex < frameCount - 1) {\n                                this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        if (timelineType == 1) {\n                            boneMap.translate = timeline;\n                        } else if (timelineType == 2) {\n                            boneMap.scale = timeline;\n                        } else {\n                            boneMap.shear = timeline;\n                        }\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                }\n            }\n            bones[this.json.bones[boneIndex].name] = boneMap;\n        }\n        animation.bones = bones;\n        var ik = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var ikIndex = this.readInt(true);\n            var frameCount = this.readInt(true);\n            var timeline = new Array(frameCount);\n            for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                var time = this.readFloat();\n                var mix = this.readFloat();\n                var bendPositive = this.readByte() != 255;\n                timeline[frameIndex] = {};\n                timeline[frameIndex].time = time;\n                timeline[frameIndex].mix = mix;\n                timeline[frameIndex].bendPositive = bendPositive;\n                if (frameIndex < frameCount - 1) {\n                    this.readCurve(frameIndex, timeline);\n                }\n            }\n            ik[this.json.ik[ikIndex].name] = timeline;\n        }\n        animation.ik = ik;\n        var transform = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var transformIndex = this.readInt(true);\n            var frameCount = this.readInt(true);\n            var timeline = new Array(frameCount);\n            for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                timeline[frameIndex] = {};\n                timeline[frameIndex].time = this.readFloat();\n                timeline[frameIndex].rotateMix = this.readFloat();\n                timeline[frameIndex].translateMix = this.readFloat();\n                timeline[frameIndex].scaleMix = this.readFloat();\n                timeline[frameIndex].shearMix = this.readFloat();\n                if (frameIndex < frameCount - 1) {\n                    this.readCurve(frameIndex, timeline);\n                }\n            }\n            transform[this.json.transform[transformIndex].name] = timeline;\n        }\n        animation.transform = transform;\n        var paths = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var pathIndex = this.readInt(true);\n            var pathMap = {};\n            for (var ii = 0, nn = this.readInt(true); ii < nn; ii++) {\n                var timelineType = this.readByte();\n                var frameCount = this.readInt(true);\n                switch (timelineType) {\n                    case 0:\n                    case 1:\n                        var timeline = new Array(frameCount);\n                        var timelineScale = 1;\n                        if (timelineType == 1) {\n                            timelineScale = this.scale;\n                        } else {\n                            timelineScale = this.scale;\n                        }\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var f = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            if (timelineType == 0) {\n                                timeline[frameIndex].position = f;\n                            } else {\n                                timeline[frameIndex].spacing = f;\n                            }\n                            if (frameIndex < frameCount - 1) this.readCurve(frameIndex, timeline);\n                        }\n                        if (timelineType == 0) {\n                            pathMap.position = timeline;\n                        } else {\n                            pathMap.spacing = timeline;\n                        }\n                        break;\n                    case 2:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var rotateMix = this.readFloat();\n                            var translateMix = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].rotateMix = rotateMix;\n                            timeline[frameIndex].translateMix = translateMix;\n                            if (frameIndex < frameCount - 1) this.readCurve(frameIndex, timeline);\n                        }\n                        pathMap.mix = timeline;\n                        break;\n                }\n            }\n            paths[this.json.path[pathIndex].name] = pathMap;\n        }\n        animation.paths = paths;\n        var deform = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var skinIndex = this.readInt(true);\n            var skinName = this.json.skinsName[skinIndex];\n            var skin = {};\n            for (var ii = 0, nn = this.readInt(true); ii < nn; ii++) {\n                var slotIndex = this.readInt(true);\n                var slotAtt = this.json.slots[slotIndex];\n                var slot = {};\n                for (var iii = 0, nnn = this.readInt(true); iii < nnn; iii++) {\n                    var meshName = this.readString();\n                    var frameCount = this.readInt(true);\n                    var timeline = new Array(frameCount);\n                    for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                        var time = this.readFloat();\n                        var end = this.readInt(true);\n                        timeline[frameIndex] = {};\n                        timeline[frameIndex].time = time;\n                        if (end != 0) {\n                            var vertices = new Array(end);\n                            var start = this.readInt(true);\n                            if (this.scale == 1) {\n                                for (var v = 0; v < end; v++) {\n                                    vertices[v] = this.readFloat();\n                                }\n                            } else {\n                                for (var v = 0; v < end; v++) {\n                                    vertices[v] = this.readFloat() * this.scale;\n                                }\n                            }\n                            timeline[frameIndex].offset = start;\n                            timeline[frameIndex].vertices = vertices;\n                        }\n                        if (frameIndex < frameCount - 1) this.readCurve(frameIndex, timeline);\n                    }\n                    slot[meshName] = timeline;\n                }\n                skin[slotAtt.name] = slot;\n            }\n            deform[skinName] = skin;\n        }\n        animation.deform = deform;\n        var drawOrderCount = this.readInt(true);\n        if (drawOrderCount > 0) {\n            var drawOrders = new Array(drawOrderCount);\n            for (var i = 0; i < drawOrderCount; i++) {\n                var drawOrderMap = {};\n                var time = this.readFloat();\n                var offsetCount = this.readInt(true);\n                var offsets = new Array(offsetCount);\n                for (var ii = 0; ii < offsetCount; ii++) {\n                    var offsetMap = {};\n                    var slotIndex = this.readInt(true);\n                    offsetMap.slot = this.json.slots[slotIndex].name;\n                    var dooffset = this.readInt(true);\n                    offsetMap.offset = dooffset;\n                    offsets[ii] = offsetMap;\n                }\n                drawOrderMap.offsets = offsets;\n                drawOrderMap.time = time;\n                drawOrders[i] = drawOrderMap;\n            }\n            duration = Math.max(duration, drawOrders[drawOrderCount - 1].time);\n            animation.drawOrder = drawOrders;\n        }\n        var eventCount = this.readInt(true);\n        if (eventCount > 0) {\n            var events = new Array(eventCount);\n            for (var i = 0; i < eventCount; i++) {\n                var time = this.readFloat();\n                var name = this.json.eventsName[this.readInt(true)];\n                var eventData = this.json.events[name];\n                var e = {};\n                e.name = name;\n                e.int = this.readInt(false);\n                e.float = this.readFloat();\n                e.string = this.readBoolean() ? this.readString() : eventData.string;\n                e.time = time;\n                events[i] = e;\n            }\n            duration = Math.max(duration, events[eventCount - 1].time);\n            animation.events = events;\n        }\n        return animation;\n    },\n};\nvar BlendMode = ['normal', 'additive', 'multiply', 'screen'];\nvar AttachmentType = ['region', 'boundingbox', 'mesh', 'linkedmesh', 'path', 'point', 'clipping'];\nvar TransformMode = ['normal', 'onlyTranslation', 'noRotationOrReflection', 'noScale', 'noScaleOrReflection'];\nvar PositionMode = ['fixed', 'percent'];\nvar SpacingMode = ['length', 'fixed', 'percent'];\nvar RotateMode = ['tangent', 'chain', 'chainScale'];\n\n// export {SkeletonBinary};\n\nexports.SkeletonBinary = SkeletonBinary;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/SkeletonBinary.js","<template>\n    <div>\n        select model: <select name=\"\" id=\"spineModelSelect\" v-model=\"selectedModel\"\n        ><option v-for=\"i in modelNames.length\" :key=\"i\" :value=\"modelNames[i-1]\">{{ modelNames[i-1] }}</option></select\n        >\n        <my-spine :skelName=\"selectedModel\"></my-spine>\n    </div>\n</template>\n\n<script>\n    import MySpine from \"./MySpine.vue\"\n    import axios from 'axios'\n    export default {\n        name: \"MySpineController\",\n        components:{MySpine},\n        data(){\n            return{\n                selectedModel:\"ximu_3\",\n                modelNames:[]\n            }\n        },\n        created(){\n            axios.get(\"https://pic.ggemo.com/al_spines/sourceList.json\").then((response)=> {\n                console.log(response);\n                this.modelNames = response.data;\n            })\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/MySpineController.vue","<template>\n    <div ref=\"spine\" id=\"mySpineHolder\">\n        select animation: <select name=\"\" id=\"spineSelect\" v-model=\"selectedAnimation\"\n            ><option v-for=\"i in animations.length\" :key=\"i\" :value=\"i-1\">{{ animations[i-1].name }}</option></select\n        >\n    </div>\n</template>\n\n<script>\nimport 'pixi-spine';\nimport {SD} from '../js/sd.js';\nimport * as PIXI from 'pixi.js';\nimport {SkeletonBinary} from '../js/SkeletonBinary.js';\n\nexport default {\n    name: 'MySpine',\n    props: ['skelName'],\n    data() {\n        return {\n            basePath:\"https://pic.ggemo.com/al_spines/\",\n            spineData: [],\n            animations: [],\n            selectedAnimation:\"\"\n        };\n    },\n    watch:{\n        selectedAnimation:function (newName,oldName) {\n            this.changeAnimation(newName)\n        },\n        skelName:function (newName,oldName) {\n            this.load(newName);\n        }\n    },\n    created() {\n        window.v = this;\n        this.PIXI = new PIXI.Application(512, 642, {\n            transparent: true,\n        });\n    },\n    mounted() {\n        console.log(this.$refs.spine);\n        this.PIXI.view.id=\"showSD\"\n        this.$refs.spine.appendChild(this.PIXI.view);\n        this.load(this.skelName);\n    },\n    methods: {\n        load: function(skelName) {\n            let basePath = this.basePath + skelName\n            if (!this.spineData[skelName]) {\n                this.loader = new PIXI.loaders.Loader(basePath);\n                let skelpath = skelName + '.skel';\n                let atlaspath = skelName + '.atlas';\n                let texpath = skelName + '.png';\n                this.loader.add(skelName + '_atlas', atlaspath, {\n                    type: 'atlas',\n                });\n                this.loader.add(skelName + '_skel', skelpath, {\n                    xhrType: 'arraybuffer',\n                });\n                this.loader.add(skelName + '_tex', texpath);\n\n                this.loader.load((loader, resources) => {\n                    let skelBin = new SkeletonBinary();\n                    skelBin.data = new Uint8Array(resources[skelName + '_skel'].data);\n\n                    skelBin.initJson();\n                    let rawSkeletonData = skelBin.json;\n\n                    let rawAtlasData = resources[skelName + '_atlas'].data;\n                    let spineAtlas = new PIXI.spine.core.TextureAtlas(rawAtlasData, function(line, callback) {\n                        callback(PIXI.BaseTexture.from(skelName + '_tex'));\n                    });\n                    let spineAtlasLoader = new PIXI.spine.core.AtlasAttachmentLoader(spineAtlas);\n                    let spineJsonParser = new PIXI.spine.core.SkeletonJson(spineAtlasLoader);\n                    let skeletonData = spineJsonParser.readSkeletonData(rawSkeletonData);\n                    this.spineData[skelName] = skeletonData;\n                    this.changeCanvas(skeletonData);\n                    return skeletonData;\n                });\n            } else {\n                this.changeCanvas(this.spineData[skelName]);\n                return this.spineData[skelName];\n            }\n        },\n        changeCanvas: function(skeletonData) {\n            let viewer = this;\n            viewer.PIXI.stage.removeChildren();\n            viewer.spine = new PIXI.spine.Spine(skeletonData);\n            this.animations = viewer.spine.spineData.animations;;\n            viewer.spine.state.setAnimation(0, this.animations[0].name, true);\n            viewer.PIXI.stage.addChild(viewer.spine);\n            viewer.spine.position.set(viewer.PIXI.view.width * 0.5, viewer.PIXI.view.height * 0.8);\n        },\n        changeAnimation: function(num) {\n            let name = this.spine.spineData.animations[num].name;\n            this.spine.state.setAnimation(0, name, true);\n        },\n    },\n};\n</script>\n\n<style>\nselect {\n    width: 150px;\n    height: 30px;\n\n    top: 0;\n    left: 0;\n    z-index: 999;\n    margin-top: 5px;\n    margin-left: 5px;\n}\n#showSD{\n    float: left;\n}\n    #mySpineHolder{\n        width:512px;\n        height: 670px;\n        padding: 0;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/MySpine.vue","import Vue from 'vue'\nimport Router from 'vue-router'\n// import Spine from '@/components/Spine'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    // {\n    //   path: '/',\n    //   name: 'Spine',\n    //   component: Spine\n    // }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    select model: \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedModel),expression:\"selectedModel\"}],attrs:{\"name\":\"\",\"id\":\"spineModelSelect\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedModel=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.modelNames.length),function(i){return _c('option',{key:i,domProps:{\"value\":_vm.modelNames[i-1]}},[_vm._v(_vm._s(_vm.modelNames[i-1]))])}),0),_vm._v(\" \"),_c('my-spine',{attrs:{\"skelName\":_vm.selectedModel}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-325f4ebd\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/MySpineController.vue\n// module id = aZFA\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"spine\",attrs:{\"id\":\"mySpineHolder\"}},[_vm._v(\"\\n    select animation: \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedAnimation),expression:\"selectedAnimation\"}],attrs:{\"name\":\"\",\"id\":\"spineSelect\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedAnimation=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.animations.length),function(i){return _c('option',{key:i,domProps:{\"value\":i-1}},[_vm._v(_vm._s(_vm.animations[i-1].name))])}),0)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-5493c951\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/MySpine.vue\n// module id = pUvb\n// module chunks = 1","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-325f4ebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./MySpineController.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpineController.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpineController.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-325f4ebd\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./MySpineController.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-325f4ebd\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MySpineController.vue\n// module id = pco7\n// module chunks = 1","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5493c951\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./MySpine.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpine.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpine.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5493c951\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./MySpine.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MySpine.vue\n// module id = puxp\n// module chunks = 1","<template>\n    <div id=\"app\" ref=\"app\">\n        <MySpineController></MySpineController>\n    </div>\n</template>\n\n<script>\n    import {viewer} from \"./js/sd-main.js\"\n    // viewer.init(\"./static\");\n    // viewer.loadSd(\"skin1\");\n\n    import MySpineController from \"./components/MySpineController.vue\"\n    export default {\n        name: 'App',\n        components:{MySpineController}\n    }\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        margin-top: 60px;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"app\",attrs:{\"id\":\"app\"}},[_c('MySpineController')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-a6b31522\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = xylD\n// module chunks = 1"],"sourceRoot":""}