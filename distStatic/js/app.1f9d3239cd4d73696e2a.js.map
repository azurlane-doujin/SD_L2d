{"version":3,"sources":["webpack:///./src/components/MySpineController.vue?cf4a","webpack:///./src/js/sd.js","webpack:///./src/js/sd-main.js","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/js/SkeletonBinary.js","webpack:///src/components/MySpineController.vue","webpack:///src/components/MySpine.vue","webpack:///./src/router/index.js","webpack:///./src/components/MySpine.vue?4c6d","webpack:///./src/components/MySpineController.vue","webpack:///./src/components/MySpine.vue","webpack:///src/App.vue","webpack:///./src/App.vue?37fc"],"names":["esExports","render","_vm","this","_h","$createElement","_c","_self","_v","directives","name","rawName","value","expression","attrs","id","on","change","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","_value","selectedModel","multiple","_l","modelNames","i","key","domProps","_s","skelName","staticRenderFns","__webpack_exports__","_SkeletonBinary","__webpack_require__","PIXI","SD","basePath","loader","loaders","Loader","spineData","load","v","_this","changeCanvas","skelpath","atlaspath","texpath","add","type","xhrType","resources","skelBin","SkeletonBinary","data","Uint8Array","initJson","rawSkeletonData","json","rawAtlasData","spineAtlas","spine","core","TextureAtlas","line","callback","BaseTexture","from","spineAtlasLoader","AtlasAttachmentLoader","skeletonData","SkeletonJson","readSkeletonData","_sd","_jquery","viewer","init","sd","canvas","_jquery2","default","selectAnimation","changeAnimation","selectedIndex","app","Application","transparent","html","view","stage","removeChildren","Spine","animations","stringAnimations","length","state","setAnimation","addChild","position","set","width","height","centerSD","num","onResize","document","getElementById","getBoundingClientRect","style","renderer","resize","removeSd","loadSd","sdWidth","exports","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_App_vue___default","n","__WEBPACK_IMPORT_KEY__","d","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_a6b31522_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_App_vue__","__vue_styles__","ssrContext","Component","normalizeComponent","a","Vue","config","productionTip","el","router","components","App","template","scale","nextNum","chars","readByte","readBoolean","readShort","readInt","optimizePositive","b","result","bytes2Float32","bytes","sign","exponent","significand","Number","NaN","POSITIVE_INFINITY","Math","pow","readFloat","readVertices","vertexCount","verticesLength","readFloatArray","vertices","boneCount","push","j","array","readShortArray","readIntArray","readHex","hex","toString","readColor","readString","charCount","String","fromCharCode","skeleton","hash","nonessential","fps","images","bones","boneData","parent","parentIndex","rotation","x","y","scaleX","scaleY","shearX","shearY","transform","TransformMode","color","slots","slotData","bone","dark","attachment","blend","BlendMode","ik","ikConstraints","order","mix","bendPositive","transformConst","ii","nn","local","relative","rotateMix","translateMix","scaleMix","shearMix","path","pathConst","positionMode","PositionMode","spacingMode","SpacingMode","rotateMode","RotateMode","spacing","skins","skinsName","defaultSkin","readSkin","skinName","skin","events","eventsName","eventName","event","int","float","string","animationName","animation","readAnimation","slotCount","slotIndex","slot","readAttachment","attachmentName","AttachmentType","region","box","mesh","uvs","triangles","hull","edges","linkedmesh","deform","closed","constantSpeed","lengths","point","clipping","end","readCurve","frameIndex","timeline","curve","cx1","cy1","cx2","cy2","duration","slotMap","timeCount","timelineType","frameCount","time","max","light","twoColor","boneIndex","boneMap","angle","rotate","timelineScale","tltime","tlx","tly","translate","shear","ikIndex","transformIndex","paths","pathIndex","pathMap","f","skinIndex","slotAtt","iii","nnn","meshName","start","offset","drawOrderCount","drawOrders","drawOrderMap","offsetCount","offsets","offsetMap","dooffset","drawOrder","eventCount","eventData","e","MySpine","_MySpine2","created","_axios2","get","then","response","console","log","props","selectedAnimation","watch","newName","oldName","window","mounted","$refs","appendChild","methods","use","Router","routes","ref","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpineController_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpineController_vue___default","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_22fd4b72_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_MySpineController_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpine_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_MySpine_vue___default","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_5493c951_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_MySpine_vue__","_MySpineController","MySpineController","_MySpineController2"],"mappings":"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","file":"distStatic/js/app.1f9d3239cd4d73696e2a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    select model: \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedModel),expression:\"selectedModel\"}],attrs:{\"name\":\"\",\"id\":\"spineModelSelect\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedModel=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.modelNames.length),function(i){return _c('option',{key:i,domProps:{\"value\":_vm.modelNames[i-1]}},[_vm._v(_vm._s(_vm.modelNames[i-1]))])}),0),_vm._v(\" \"),_c('my-spine',{attrs:{\"skelName\":_vm.selectedModel}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-22fd4b72\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/MySpineController.vue\n// module id = 1CE8\n// module chunks = 1","import {SkeletonBinary} from './SkeletonBinary.js';\nimport * as PIXI from 'pixi.js';\nimport \"pixi-spine\";\n\nfunction SD(basePath) {\n    this.basePath = basePath;\n    this.loader = new PIXI.loaders.Loader(this.basePath);\n}\nSD.prototype = {\n    spineData: {},\n    load: function(name, v) {\n        if (!this.spineData[name]) {\n            var skelpath = name + '.skel';\n            var atlaspath = name + '.atlas';\n            var texpath = name + '.png';\n            this.loader.add(name + '_atlas', atlaspath, {\n                type: 'atlas',\n            });\n            this.loader.add(name + '_skel', skelpath, {\n                xhrType: 'arraybuffer',\n            });\n            this.loader.add(name + '_tex', texpath);\n\n\n            this.loader.load((loader, resources) => {\n                var skelBin = new SkeletonBinary();\n                skelBin.data = new Uint8Array(resources[name + '_skel'].data);\n\n\n                skelBin.initJson();\n                var rawSkeletonData = skelBin.json;\n\n                var rawAtlasData = resources[name + '_atlas'].data;\n                var spineAtlas = new PIXI.spine.core.TextureAtlas(rawAtlasData, function(line, callback) {\n                    callback(PIXI.BaseTexture.from(name + '_tex'));\n                });\n                var spineAtlasLoader = new PIXI.spine.core.AtlasAttachmentLoader(spineAtlas);\n                var spineJsonParser = new PIXI.spine.core.SkeletonJson(spineAtlasLoader);\n                var skeletonData = spineJsonParser.readSkeletonData(rawSkeletonData);\n                this.spineData[name] = skeletonData;\n                v.changeCanvas(skeletonData);\n            });\n        } else {\n            v.changeCanvas(this.spineData[name]);\n        }\n    },\n};\n\nexport {SD};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/sd.js","import {SD} from \"./sd.js\"\nimport * as PIXI from 'pixi.js';\nimport \"pixi-spine\";\n\nimport $ from \"jquery\";\n\nvar viewer = {\n    init: function(basePath) {\n        viewer.sd = new SD(basePath);\n        viewer.canvas = $(\".Canvas\");\n        viewer.selectAnimation = $(\".selectAnimation\");\n        viewer.selectAnimation.change(function() {\n            viewer.changeAnimation(this.selectedIndex);\n        });\n        viewer.app = new PIXI.Application(512,512,{\n            transparent: true\n        });\n        viewer.canvas.html(viewer.app.view);\n    },\n    changeCanvas: function(skeletonData) {\n        viewer.app.stage.removeChildren();\n        viewer.spine = new PIXI.spine.Spine(skeletonData);\n        var animations = viewer.spine.spineData.animations;\n        var stringAnimations = \"\";\n        for (var i = 0; i < animations.length; i++) {\n            if (animations[i].name == \"stand\")\n                stringAnimations += \"<option value=\\\"\" + animations[i].name + \"\\\" selected>\" + animations[i].name + \"</option>\";\n            else\n                stringAnimations += \"<option value=\\\"\" + animations[i].name + \"\\\">\" + animations[i].name + \"</option>\";\n        }\n        viewer.selectAnimation.html(stringAnimations);\n        viewer.spine.state.setAnimation(0, \"stand\", true);\n        viewer.app.stage.addChild(viewer.spine);\n        viewer.spine.position.set(viewer.app.view.width * 0.5, viewer.app.view.height * 0.8);\n        centerSD();\n    },\n    changeAnimation: function(num) {\n        var name = viewer.spine.spineData.animations[num].name;\n        viewer.spine.state.setAnimation(0, name, true);\n    },\n    onResize: function() {\n        var element = document.getElementById(\"containerSD\");\n        var positionInfo = element.getBoundingClientRect();\n        var width = positionInfo.width;\n        if (width > 512) {\n            width = 512;\n        }\n        var height = width;\n        viewer.app.view.style.width = width + \"px\";\n        viewer.app.view.style.height = height + \"px\";\n        viewer.app.renderer.resize(width, height);\n        viewer.spine.position.set(width * 0.5, height * 0.8);\n    },\n    removeSd: function() {\n        viewer.app.stage.removeChildren();\n    },\n    loadSd: function(sd) {\n        viewer.sd.load(sd, viewer);\n    },\n    sdWidth: function() {\n        return viewer.app.view.width;\n    }\n};\n\nexports.viewer = viewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/sd-main.js","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a6b31522\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a6b31522\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = M93x\n// module chunks = 1","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","function SkeletonBinary() {}\n\nSkeletonBinary.prototype = {\n    data: null,\n    scale: 1,\n    json: {},\n    nextNum: 0,\n    chars: null,\n    readByte: function() {\n        return this.nextNum < this.data.length ? this.data[this.nextNum++] : null;\n    },\n    readBoolean: function() {\n        return this.readByte() != 0;\n    },\n    readShort: function() {\n        return (this.readByte() << 8) | this.readByte();\n    },\n    readInt: function(optimizePositive) {\n        if (typeof optimizePositive === 'undefined') {\n            return (this.readByte() << 24) | (this.readByte() << 16) | (this.readByte() << 8) | this.readByte();\n        }\n        var b = this.readByte();\n        var result = b & 0x7f;\n        if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7f) << 7;\n            if ((b & 0x80) != 0) {\n                b = this.readByte();\n                result |= (b & 0x7f) << 14;\n                if ((b & 0x80) != 0) {\n                    b = this.readByte();\n                    result |= (b & 0x7f) << 21;\n                    if ((b & 0x80) != 0) {\n                        b = this.readByte();\n                        result |= (b & 0x7f) << 28;\n                    }\n                }\n            }\n        }\n        return optimizePositive ? result : (result >> 1) ^ -(result & 1);\n    },\n    bytes2Float32: function(bytes) {\n        var sign = bytes & 0x80000000 ? -1 : 1;\n        var exponent = ((bytes >> 23) & 0xff) - 127;\n        var significand = bytes & ~(-1 << 23);\n        if (exponent == 128) return sign * (significand ? Number.NaN : Number.POSITIVE_INFINITY);\n        if (exponent == -127) {\n            if (significand == 0) return sign * 0.0;\n            exponent = -126;\n            significand /= 1 << 22;\n        } else significand = (significand | (1 << 23)) / (1 << 23);\n        return sign * significand * Math.pow(2, exponent);\n    },\n    readFloat: function() {\n        return this.bytes2Float32((this.readByte() << 24) + (this.readByte() << 16) + (this.readByte() << 8) + (this.readByte() << 0));\n    },\n    readVertices: function(vertexCount) {\n        var verticesLength = vertexCount << 1;\n        if (!this.readBoolean()) {\n            return this.readFloatArray(verticesLength, this.scale);\n        }\n        var vertices = new Array();\n        for (var i = 0; i < vertexCount; i++) {\n            var boneCount = this.readInt(true);\n            vertices.push(boneCount);\n            for (var j = 0; j < boneCount; j++) {\n                vertices.push(this.readInt(true));\n                vertices.push(this.readFloat() * this.scale);\n                vertices.push(this.readFloat() * this.scale);\n                vertices.push(this.readFloat());\n            }\n        }\n        return vertices;\n    },\n    readFloatArray: function(n, scale) {\n        var array = new Array(n);\n        if (scale == 1) {\n            for (var i = 0; i < n; i++) {\n                array[i] = this.readFloat();\n            }\n        } else {\n            for (var i = 0; i < n; i++) {\n                array[i] = this.readFloat() * scale;\n            }\n        }\n        return array;\n    },\n    readShortArray: function() {\n        var n = this.readInt(true);\n        var array = new Array(n);\n        for (var i = 0; i < n; i++) {\n            array[i] = this.readShort();\n        }\n        return array;\n    },\n    readIntArray: function() {\n        var n = this.readInt(true);\n        var array = new Array(n);\n        for (var i = 0; i < n; i++) array[i] = this.readInt(true);\n        return array;\n    },\n    readHex: function() {\n        var hex = this.readByte().toString(16);\n        return hex.length == 2 ? hex : '0' + hex;\n    },\n    readColor: function() {\n        return this.readHex() + this.readHex() + this.readHex() + this.readHex();\n    },\n    readString() {\n        var charCount = this.readInt(this, true);\n        switch (charCount) {\n            case 0:\n                return null;\n            case 1:\n                return '';\n        }\n        charCount--;\n        this.chars = '';\n        var b = 0;\n        for (var i = 0; i < charCount; ) {\n            b = this.readByte();\n            switch (b >> 4) {\n                case 12:\n                case 13:\n                    this.chars += String.fromCharCode(((b & 0x1f) << 6) | (this.readByte() & 0x3f));\n                    i += 2;\n                    break;\n                case 14:\n                    this.chars += String.fromCharCode(((b & 0x0f) << 12) | ((this.readByte() & 0x3f) << 6) | (this.readByte() & 0x3f));\n                    i += 3;\n                    break;\n                default:\n                    this.chars += String.fromCharCode(b);\n                    i++;\n            }\n        }\n        return this.chars;\n    },\n    initJson: function() {\n        this.json.skeleton = {};\n        var skeleton = this.json.skeleton;\n        skeleton.hash = this.readString();\n        if (skeleton.hash.length == 0) skeleton.hash = null;\n        skeleton.spine = this.readString();\n        if (skeleton.spine.length == 0) skeleton.spine = null;\n        skeleton.width = this.readFloat();\n        skeleton.height = this.readFloat();\n        var nonessential = this.readBoolean();\n        if (nonessential) {\n            skeleton.fps = this.readFloat();\n            skeleton.images = this.readString();\n            if (skeleton.images.length == 0) skeleton.images = null;\n        }\n        this.json.bones = new Array(this.readInt(true));\n        var bones = this.json.bones;\n        for (var i = 0; i < bones.length; i++) {\n            var boneData = {};\n            boneData.name = this.readString();\n            boneData.parent = null;\n            if (i != 0) {\n                var parentIndex = this.readInt(true);\n                boneData.parent = bones[parentIndex].name;\n            }\n            boneData.rotation = this.readFloat();\n            boneData.x = this.readFloat() * this.scale;\n            boneData.y = this.readFloat() * this.scale;\n            boneData.scaleX = this.readFloat();\n            boneData.scaleY = this.readFloat();\n            boneData.shearX = this.readFloat();\n            boneData.shearY = this.readFloat();\n            boneData.length = this.readFloat() * this.scale;\n            boneData.transform = TransformMode[this.readInt(true)];\n            if (nonessential) {\n                boneData.color = this.readColor();\n            }\n            bones[i] = boneData;\n        }\n        this.json.slots = new Array(this.readInt(true));\n        var slots = this.json.slots;\n        for (var i = 0; i < slots.length; i++) {\n            var slotData = {};\n            slotData.name = this.readString();\n            var boneData = this.json.bones[this.readInt(true)];\n            slotData.bone = boneData.name;\n            slotData.color = this.readColor();\n            slotData.dark = this.readColor();\n            slotData.attachment = this.readString();\n            slotData.blend = BlendMode[this.readInt(true)];\n            slots[i] = slotData;\n        }\n        var ik = new Array(this.readInt(true));\n        for (var i = 0; i < ik.length; i++) {\n            var ikConstraints = {};\n            ikConstraints.name = this.readString();\n            ikConstraints.order = this.readInt(true);\n            ikConstraints.bones = new Array(this.readInt(true));\n            for (var j = 0; j < ikConstraints.bones.length; j++) {\n                ikConstraints.bones[j] = this.json.bones[this.readInt(true)].name;\n            }\n            ikConstraints.target = this.json.bones[this.readInt(true)].name;\n            ikConstraints.mix = this.readFloat();\n            ikConstraints.bendPositive = this.readByte() != 255;\n            ik[i] = ikConstraints;\n        }\n        this.json.ik = ik;\n        var transform = new Array(this.readInt(true));\n        for (var i = 0; i < transform.length; i++) {\n            var transformConst = {};\n            transformConst.name = this.readString();\n            transformConst.order = this.readInt(true);\n            var bones = new Array(this.readInt(true));\n            for (var ii = 0, nn = bones.length; ii < nn; ii++) {\n                bones[ii] = this.json.bones[this.readInt(true)].name;\n            }\n            transformConst.bones = bones;\n            transformConst.target = this.json.bones[this.readInt(true)].name;\n            transformConst.local = this.readBoolean();\n            transformConst.relative = this.readBoolean();\n            transformConst.rotation = this.readFloat();\n            transformConst.x = this.readFloat() * this.scale;\n            transformConst.y = this.readFloat() * this.scale;\n            transformConst.scaleX = this.readFloat();\n            transformConst.scaleY = this.readFloat();\n            transformConst.shearY = this.readFloat();\n            transformConst.rotateMix = this.readFloat();\n            transformConst.translateMix = this.readFloat();\n            transformConst.scaleMix = this.readFloat();\n            transformConst.shearMix = this.readFloat();\n            transform[i] = transformConst;\n        }\n        this.json.transform = transform;\n        var path = new Array(this.readInt(true));\n        for (var i = 0; i < path.length; i++) {\n            var pathConst = {};\n            pathConst.name = this.readString();\n            pathConst.order = this.readInt(true);\n            pathConst.bones = new Array(this.readInt(true));\n            for (var ii = 0, nn = pathConst.bones.length; ii < nn; ii++) {\n                pathConst.bones[ii] = this.json.bones[this.readInt(true)].name;\n            }\n            pathConst.target = this.json.slots[this.readInt(true)].name;\n            pathConst.positionMode = PositionMode[this.readInt(true)];\n            pathConst.spacingMode = SpacingMode[this.readInt(true)];\n            pathConst.rotateMode = RotateMode[this.readInt(true)];\n            pathConst.rotation = this.readFloat();\n            pathConst.position = this.readFloat();\n            pathConst.spacing = this.readFloat();\n            pathConst.rotateMix = this.readFloat();\n            pathConst.translateMix = this.readFloat();\n            path[i] = pathConst;\n        }\n        this.json.path = path;\n        this.json.skins = {};\n        this.json.skinsName = new Array();\n        var skins = this.json.skins;\n        var defaultSkin = this.readSkin('default', nonessential);\n        if (defaultSkin != null) {\n            skins['default'] = defaultSkin;\n            this.json.skinsName.push('default');\n        }\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var skinName = this.readString();\n            var skin = this.readSkin(skinName, nonessential);\n            skins[skinName] = skin;\n            this.json.skinsName.push('skinName');\n        }\n        this.json.events = [];\n        this.json.eventsName = [];\n        var events = this.json.events;\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var eventName = this.readString();\n            var event = {};\n            event.int = this.readInt(false);\n            event.float = this.readFloat();\n            event.string = this.readString();\n            events[eventName] = event;\n            this.json.eventsName[i] = eventName;\n        }\n        this.json.animations = {};\n        var animations = this.json.animations;\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var animationName = this.readString();\n            var animation = this.readAnimation(animationName);\n            animations[animationName] = animation;\n        }\n    },\n    readSkin(skinName, nonessential) {\n        var slotCount = this.readInt(true);\n        if (slotCount == 0) return null;\n        var skin = {};\n        for (var i = 0; i < slotCount; i++) {\n            var slotIndex = this.readInt(true);\n            var slot = {};\n            for (var j = 0, n = this.readInt(true); j < n; j++) {\n                var name = this.readString();\n                var attachment = this.readAttachment(name, nonessential);\n                slot[name] = attachment;\n            }\n            skin[this.json.slots[slotIndex].name] = slot;\n        }\n        return skin;\n    },\n    readAttachment(attachmentName, nonessential) {\n        var name = this.readString();\n        if (name == null) name = attachmentName;\n        switch (AttachmentType[this.readByte()]) {\n            case 'region':\n                var path = this.readString();\n                if (path == null) path = name;\n                var region = {};\n                region.type = 'region';\n                region.name = name;\n                region.path = path;\n                region.rotation = this.readFloat();\n                region.x = this.readFloat() * this.scale;\n                region.y = this.readFloat() * this.scale;\n                region.scaleX = this.readFloat();\n                region.scaleY = this.readFloat();\n                region.width = this.readFloat() * this.scale;\n                region.height = this.readFloat() * this.scale;\n                region.color = this.readColor();\n                return region;\n            case 'boundingbox':\n                var box = {};\n                box.type = 'boundingbox';\n                box.name = name;\n                var vertexCount = this.readInt(true);\n                box.vertexCount = vertexCount;\n                box.vertices = this.readVertices(vertexCount);\n                if (this.nonessential) {\n                    box.color = this.readColor();\n                }\n                return box;\n            case 'mesh':\n                var path = this.readString();\n                if (path == null) path = name;\n                var mesh = {};\n                mesh.type = 'mesh';\n                mesh.name = name;\n                mesh.path = path;\n                mesh.color = this.readColor();\n                var vertexCount = this.readInt(true);\n                mesh.uvs = this.readFloatArray(vertexCount << 1, 1);\n                mesh.triangles = this.readShortArray();\n                mesh.vertices = this.readVertices(vertexCount);\n                mesh.hull = this.readInt(true) << 1;\n                if (nonessential) {\n                    mesh.edges = this.readShortArray();\n                    mesh.width = this.readFloat() * this.scale;\n                    mesh.height = this.readFloat() * this.scale;\n                }\n                return mesh;\n            case 'linkedmesh':\n                var path = this.readString();\n                if (path == null) path = name;\n                var linkedmesh = {};\n                linkedmesh.type = 'linkedmesh';\n                linkedmesh.name = name;\n                linkedmesh.path = path;\n                linkedmesh.color = this.readColor();\n                linkedmesh.skin = this.readString();\n                linkedmesh.parent = this.readString();\n                linkedmesh.deform = this.readBoolean();\n                if (nonessential) {\n                    linkedmesh.width = this.readFloat() * this.scale;\n                    linkedmesh.height = this.readFloat() * this.scale;\n                }\n                return linkedmesh;\n            case 'path':\n                var path = {};\n                path.type = 'path';\n                path.name = name;\n                path.closed = this.readBoolean();\n                path.constantSpeed = this.readBoolean();\n                var vertexCount = this.readInt(true);\n                path.vertexCount = vertexCount;\n                path.vertices = this.readVertices(vertexCount);\n                var lengths = new Array(vertexCount / 3);\n                for (var i = 0; i < lengths.length; i++) {\n                    lengths[i] = this.readFloat() * this.scale;\n                }\n                path.lengths = lengths;\n                if (nonessential) {\n                    path.color = this.readColor();\n                }\n                return path;\n            case 'point':\n                var point = {};\n                point.type = 'point';\n                point.name = name;\n                point.rotation = this.readFloat();\n                point.x = this.readFloat() * this.scale;\n                point.y = this.readFloat() * this.scale;\n                if (nonessential) {\n                    path.color = this.readColor();\n                }\n                return point;\n            case 'clipping':\n                var clipping = {};\n                clipping.type = 'clipping';\n                clipping.name = name;\n                clipping.end = this.readInt(true);\n                var vertexCount = this.readInt(true);\n                clipping.vertexCount = vertexCount;\n                clipping.vertices = this.readVertices(vertexCount);\n                if (nonessential) {\n                    clipping.color = this.readColor();\n                }\n                return clipping;\n        }\n        return null;\n    },\n    readCurve(frameIndex, timeline) {\n        switch (this.readByte()) {\n            case 0:\n                timeline[frameIndex].curve = 'linear';\n                break;\n            case 1:\n                timeline[frameIndex].curve = 'stepped';\n                break;\n            case 2:\n                var cx1 = this.readFloat();\n                var cy1 = this.readFloat();\n                var cx2 = this.readFloat();\n                var cy2 = this.readFloat();\n                timeline[frameIndex].curve = [cx1, cy1, cx2, cy2];\n        }\n    },\n    readAnimation(name) {\n        var animation = {};\n        var scale = this.scale;\n        var duration = 0;\n        var slots = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var slotIndex = this.readInt(true);\n            var slotMap = {};\n            var timeCount = this.readInt(true);\n            for (var ii = 0; ii < timeCount; ii++) {\n                var timelineType = this.readByte();\n                var frameCount = this.readInt(true);\n                switch (timelineType) {\n                    case 0:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var attachmentName = this.readString();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].name = attachmentName;\n                        }\n                        slotMap.attachment = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                    case 1:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var color = this.readColor();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].color = color;\n                            if (frameIndex < frameCount - 1) {\n                                var str = this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        slotMap.color = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                    case 2:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var light = this.readColor();\n                            var dark = this.readColor();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].light = light;\n                            timeline[frameIndex].dark = dark;\n                            if (frameIndex < frameCount - 1) {\n                                var str = this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        slotMap.twoColor = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                }\n            }\n            slots[this.json.slots[slotIndex].name] = slotMap;\n        }\n        animation.slots = slots;\n        var bones = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var boneIndex = this.readInt(true);\n            var boneMap = {};\n            for (var ii = 0, nn = this.readInt(true); ii < nn; ii++) {\n                var timelineType = this.readByte();\n                var frameCount = this.readInt(true);\n                switch (timelineType) {\n                    case 0:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var angle = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].angle = angle;\n                            if (frameIndex < frameCount - 1) {\n                                this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        boneMap.rotate = timeline;\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                    case 1:\n                    case 2:\n                    case 3:\n                        var timeline = new Array(frameCount);\n                        var timelineScale = 1;\n                        if (timelineType == 1) {\n                            timelineScale = scale;\n                        }\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var tltime = this.readFloat();\n                            var tlx = this.readFloat();\n                            var tly = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = tltime;\n                            timeline[frameIndex].x = tlx * timelineScale;\n                            timeline[frameIndex].y = tly * timelineScale;\n                            if (frameIndex < frameCount - 1) {\n                                this.readCurve(frameIndex, timeline);\n                            }\n                        }\n                        if (timelineType == 1) {\n                            boneMap.translate = timeline;\n                        } else if (timelineType == 2) {\n                            boneMap.scale = timeline;\n                        } else {\n                            boneMap.shear = timeline;\n                        }\n                        duration = Math.max(duration, timeline[frameCount - 1].time);\n                        break;\n                }\n            }\n            bones[this.json.bones[boneIndex].name] = boneMap;\n        }\n        animation.bones = bones;\n        var ik = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var ikIndex = this.readInt(true);\n            var frameCount = this.readInt(true);\n            var timeline = new Array(frameCount);\n            for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                var time = this.readFloat();\n                var mix = this.readFloat();\n                var bendPositive = this.readByte() != 255;\n                timeline[frameIndex] = {};\n                timeline[frameIndex].time = time;\n                timeline[frameIndex].mix = mix;\n                timeline[frameIndex].bendPositive = bendPositive;\n                if (frameIndex < frameCount - 1) {\n                    this.readCurve(frameIndex, timeline);\n                }\n            }\n            ik[this.json.ik[ikIndex].name] = timeline;\n        }\n        animation.ik = ik;\n        var transform = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var transformIndex = this.readInt(true);\n            var frameCount = this.readInt(true);\n            var timeline = new Array(frameCount);\n            for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                timeline[frameIndex] = {};\n                timeline[frameIndex].time = this.readFloat();\n                timeline[frameIndex].rotateMix = this.readFloat();\n                timeline[frameIndex].translateMix = this.readFloat();\n                timeline[frameIndex].scaleMix = this.readFloat();\n                timeline[frameIndex].shearMix = this.readFloat();\n                if (frameIndex < frameCount - 1) {\n                    this.readCurve(frameIndex, timeline);\n                }\n            }\n            transform[this.json.transform[transformIndex].name] = timeline;\n        }\n        animation.transform = transform;\n        var paths = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var pathIndex = this.readInt(true);\n            var pathMap = {};\n            for (var ii = 0, nn = this.readInt(true); ii < nn; ii++) {\n                var timelineType = this.readByte();\n                var frameCount = this.readInt(true);\n                switch (timelineType) {\n                    case 0:\n                    case 1:\n                        var timeline = new Array(frameCount);\n                        var timelineScale = 1;\n                        if (timelineType == 1) {\n                            timelineScale = this.scale;\n                        } else {\n                            timelineScale = this.scale;\n                        }\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var f = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            if (timelineType == 0) {\n                                timeline[frameIndex].position = f;\n                            } else {\n                                timeline[frameIndex].spacing = f;\n                            }\n                            if (frameIndex < frameCount - 1) this.readCurve(frameIndex, timeline);\n                        }\n                        if (timelineType == 0) {\n                            pathMap.position = timeline;\n                        } else {\n                            pathMap.spacing = timeline;\n                        }\n                        break;\n                    case 2:\n                        var timeline = new Array(frameCount);\n                        for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                            var time = this.readFloat();\n                            var rotateMix = this.readFloat();\n                            var translateMix = this.readFloat();\n                            timeline[frameIndex] = {};\n                            timeline[frameIndex].time = time;\n                            timeline[frameIndex].rotateMix = rotateMix;\n                            timeline[frameIndex].translateMix = translateMix;\n                            if (frameIndex < frameCount - 1) this.readCurve(frameIndex, timeline);\n                        }\n                        pathMap.mix = timeline;\n                        break;\n                }\n            }\n            paths[this.json.path[pathIndex].name] = pathMap;\n        }\n        animation.paths = paths;\n        var deform = {};\n        for (var i = 0, n = this.readInt(true); i < n; i++) {\n            var skinIndex = this.readInt(true);\n            var skinName = this.json.skinsName[skinIndex];\n            var skin = {};\n            for (var ii = 0, nn = this.readInt(true); ii < nn; ii++) {\n                var slotIndex = this.readInt(true);\n                var slotAtt = this.json.slots[slotIndex];\n                var slot = {};\n                for (var iii = 0, nnn = this.readInt(true); iii < nnn; iii++) {\n                    var meshName = this.readString();\n                    var frameCount = this.readInt(true);\n                    var timeline = new Array(frameCount);\n                    for (var frameIndex = 0; frameIndex < frameCount; frameIndex++) {\n                        var time = this.readFloat();\n                        var end = this.readInt(true);\n                        timeline[frameIndex] = {};\n                        timeline[frameIndex].time = time;\n                        if (end != 0) {\n                            var vertices = new Array(end);\n                            var start = this.readInt(true);\n                            if (this.scale == 1) {\n                                for (var v = 0; v < end; v++) {\n                                    vertices[v] = this.readFloat();\n                                }\n                            } else {\n                                for (var v = 0; v < end; v++) {\n                                    vertices[v] = this.readFloat() * this.scale;\n                                }\n                            }\n                            timeline[frameIndex].offset = start;\n                            timeline[frameIndex].vertices = vertices;\n                        }\n                        if (frameIndex < frameCount - 1) this.readCurve(frameIndex, timeline);\n                    }\n                    slot[meshName] = timeline;\n                }\n                skin[slotAtt.name] = slot;\n            }\n            deform[skinName] = skin;\n        }\n        animation.deform = deform;\n        var drawOrderCount = this.readInt(true);\n        if (drawOrderCount > 0) {\n            var drawOrders = new Array(drawOrderCount);\n            for (var i = 0; i < drawOrderCount; i++) {\n                var drawOrderMap = {};\n                var time = this.readFloat();\n                var offsetCount = this.readInt(true);\n                var offsets = new Array(offsetCount);\n                for (var ii = 0; ii < offsetCount; ii++) {\n                    var offsetMap = {};\n                    var slotIndex = this.readInt(true);\n                    offsetMap.slot = this.json.slots[slotIndex].name;\n                    var dooffset = this.readInt(true);\n                    offsetMap.offset = dooffset;\n                    offsets[ii] = offsetMap;\n                }\n                drawOrderMap.offsets = offsets;\n                drawOrderMap.time = time;\n                drawOrders[i] = drawOrderMap;\n            }\n            duration = Math.max(duration, drawOrders[drawOrderCount - 1].time);\n            animation.drawOrder = drawOrders;\n        }\n        var eventCount = this.readInt(true);\n        if (eventCount > 0) {\n            var events = new Array(eventCount);\n            for (var i = 0; i < eventCount; i++) {\n                var time = this.readFloat();\n                var name = this.json.eventsName[this.readInt(true)];\n                var eventData = this.json.events[name];\n                var e = {};\n                e.name = name;\n                e.int = this.readInt(false);\n                e.float = this.readFloat();\n                e.string = this.readBoolean() ? this.readString() : eventData.string;\n                e.time = time;\n                events[i] = e;\n            }\n            duration = Math.max(duration, events[eventCount - 1].time);\n            animation.events = events;\n        }\n        return animation;\n    },\n};\nvar BlendMode = ['normal', 'additive', 'multiply', 'screen'];\nvar AttachmentType = ['region', 'boundingbox', 'mesh', 'linkedmesh', 'path', 'point', 'clipping'];\nvar TransformMode = ['normal', 'onlyTranslation', 'noRotationOrReflection', 'noScale', 'noScaleOrReflection'];\nvar PositionMode = ['fixed', 'percent'];\nvar SpacingMode = ['length', 'fixed', 'percent'];\nvar RotateMode = ['tangent', 'chain', 'chainScale'];\n\n// export {SkeletonBinary};\n\nexports.SkeletonBinary = SkeletonBinary;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/SkeletonBinary.js","<template>\n    <div>\n        select model: <select name=\"\" id=\"spineModelSelect\" v-model=\"selectedModel\"\n        ><option v-for=\"i in modelNames.length\" :key=\"i\" :value=\"modelNames[i-1]\">{{ modelNames[i-1] }}</option></select\n        >\n        <my-spine :skelName=\"selectedModel\"></my-spine>\n    </div>\n</template>\n\n<script>\n    import MySpine from \"./MySpine.vue\"\n    import axios from 'axios'\n    export default {\n        name: \"MySpineController\",\n        components:{MySpine},\n        data(){\n            return{\n                selectedModel:\"ximu_3\",\n                modelNames:[]\n            }\n        },\n        created(){\n            axios.get(\"http://pic.ggemo.com/al_spines/sourceList.json\").then((response)=> {\n                console.log(response);\n                this.modelNames = response.data;\n            })\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/MySpineController.vue","<template>\n    <div ref=\"spine\" id=\"mySpineHolder\">\n        select animation: <select name=\"\" id=\"spineSelect\" v-model=\"selectedAnimation\"\n            ><option v-for=\"i in animations.length\" :key=\"i\" :value=\"i-1\">{{ animations[i-1].name }}</option></select\n        >\n    </div>\n</template>\n\n<script>\nimport 'pixi-spine';\nimport {SD} from '../js/sd.js';\nimport * as PIXI from 'pixi.js';\nimport {SkeletonBinary} from '../js/SkeletonBinary.js';\n\nexport default {\n    name: 'MySpine',\n    props: ['skelName'],\n    data() {\n        return {\n            basePath:\"https://pic.ggemo.com/al_spines/\",\n            spineData: [],\n            animations: [],\n            selectedAnimation:\"\"\n        };\n    },\n    watch:{\n        selectedAnimation:function (newName,oldName) {\n            this.changeAnimation(newName)\n        },\n        skelName:function (newName,oldName) {\n            this.load(newName);\n        }\n    },\n    created() {\n        window.v = this;\n        this.PIXI = new PIXI.Application(512, 642, {\n            transparent: true,\n        });\n    },\n    mounted() {\n        console.log(this.$refs.spine);\n        this.PIXI.view.id=\"showSD\"\n        this.$refs.spine.appendChild(this.PIXI.view);\n        this.load(this.skelName);\n    },\n    methods: {\n        load: function(skelName) {\n            let basePath = this.basePath + skelName\n            if (!this.spineData[skelName]) {\n                this.loader = new PIXI.loaders.Loader(basePath);\n                let skelpath = skelName + '.skel';\n                let atlaspath = skelName + '.atlas';\n                let texpath = skelName + '.png';\n                this.loader.add(skelName + '_atlas', atlaspath, {\n                    type: 'atlas',\n                });\n                this.loader.add(skelName + '_skel', skelpath, {\n                    xhrType: 'arraybuffer',\n                });\n                this.loader.add(skelName + '_tex', texpath);\n\n                this.loader.load((loader, resources) => {\n                    let skelBin = new SkeletonBinary();\n                    skelBin.data = new Uint8Array(resources[skelName + '_skel'].data);\n\n                    skelBin.initJson();\n                    let rawSkeletonData = skelBin.json;\n\n                    let rawAtlasData = resources[skelName + '_atlas'].data;\n                    let spineAtlas = new PIXI.spine.core.TextureAtlas(rawAtlasData, function(line, callback) {\n                        callback(PIXI.BaseTexture.from(skelName + '_tex'));\n                    });\n                    let spineAtlasLoader = new PIXI.spine.core.AtlasAttachmentLoader(spineAtlas);\n                    let spineJsonParser = new PIXI.spine.core.SkeletonJson(spineAtlasLoader);\n                    let skeletonData = spineJsonParser.readSkeletonData(rawSkeletonData);\n                    this.spineData[skelName] = skeletonData;\n                    this.changeCanvas(skeletonData);\n                    return skeletonData;\n                });\n            } else {\n                this.changeCanvas(this.spineData[skelName]);\n                return this.spineData[skelName];\n            }\n        },\n        changeCanvas: function(skeletonData) {\n            let viewer = this;\n            viewer.PIXI.stage.removeChildren();\n            viewer.spine = new PIXI.spine.Spine(skeletonData);\n            this.animations = viewer.spine.spineData.animations;;\n            viewer.spine.state.setAnimation(0, this.animations[0].name, true);\n            viewer.PIXI.stage.addChild(viewer.spine);\n            viewer.spine.position.set(viewer.PIXI.view.width * 0.5, viewer.PIXI.view.height * 0.8);\n        },\n        changeAnimation: function(num) {\n            let name = this.spine.spineData.animations[num].name;\n            this.spine.state.setAnimation(0, name, true);\n        },\n    },\n};\n</script>\n\n<style>\nselect {\n    width: 150px;\n    height: 30px;\n\n    top: 0;\n    left: 0;\n    z-index: 999;\n    margin-top: 5px;\n    margin-left: 5px;\n}\n#showSD{\n    float: left;\n}\n    #mySpineHolder{\n        width:512px;\n        height: 670px;\n        padding: 0;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/MySpine.vue","import Vue from 'vue'\nimport Router from 'vue-router'\n// import Spine from '@/components/Spine'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    // {\n    //   path: '/',\n    //   name: 'Spine',\n    //   component: Spine\n    // }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"spine\",attrs:{\"id\":\"mySpineHolder\"}},[_vm._v(\"\\n    select animation: \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedAnimation),expression:\"selectedAnimation\"}],attrs:{\"name\":\"\",\"id\":\"spineSelect\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedAnimation=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.animations.length),function(i){return _c('option',{key:i,domProps:{\"value\":i-1}},[_vm._v(_vm._s(_vm.animations[i-1].name))])}),0)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-5493c951\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/MySpine.vue\n// module id = pUvb\n// module chunks = 1","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-22fd4b72\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./MySpineController.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpineController.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpineController.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-22fd4b72\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./MySpineController.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-22fd4b72\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MySpineController.vue\n// module id = pco7\n// module chunks = 1","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5493c951\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./MySpine.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpine.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MySpine.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5493c951\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./MySpine.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MySpine.vue\n// module id = puxp\n// module chunks = 1","<template>\n    <div id=\"app\" ref=\"app\">\n        <MySpineController></MySpineController>\n    </div>\n</template>\n\n<script>\n    import {viewer} from \"./js/sd-main.js\"\n    // viewer.init(\"./static\");\n    // viewer.loadSd(\"skin1\");\n\n    import MySpineController from \"./components/MySpineController.vue\"\n    export default {\n        name: 'App',\n        components:{MySpineController}\n    }\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        margin-top: 60px;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"app\",attrs:{\"id\":\"app\"}},[_c('MySpineController')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-a6b31522\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = xylD\n// module chunks = 1"],"sourceRoot":""}